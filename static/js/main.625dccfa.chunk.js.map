{"version":3,"sources":["useInput.js","useDropdown.js","useMultiSelect.js","useRadioInput.js","useCheckbox.js","useMultipleCheckbox.js","useTextarea.js","Editor.js","Display.js","App.js","serviceWorker.js","index.js"],"names":["useInput","name","initialValue","useState","value","setValue","handleChange","e","target","Input","className","onChange","useDropdown","options","label","id","replace","toLowerCase","Select","map","key","useMultiSelect","MultiSelect","multiple","filter","option","selected","useRadioInput","state","setState","RadioInput","type","checked","window","useCheckbox","Checkbox","console","log","useMultipleCheckbox","initialValues","values","setValues","MultipleCheckbox","includes","useTextarea","Textarea","Editor","submit","toppingsOptions","NameInput","flavorOption","FlavorSelect","flavor","toppingOption","ToppingMultiSelect","toppings","ToppingRadioInput","top","TwoScoopCheckbox","twoScoop","ToppingMultipleCheckbox","toppingMultiple","OrderTextArea","order","useEffect","Display","data","keys","Object","length","Array","isArray","join","toString","formatValue","App","formData","setFormData","classname","newData","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.625dccfa.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst useInput = (name, initialValue = \"\") => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  const Input = (\n    <div className='form-group'>\n      <label>Name</label>\n      <input\n        className='form-control'\n        name={name}\n        value={value}\n        onChange={handleChange}\n      />\n    </div>\n  );\n  return [Input, value, setValue, name];\n};\n\nexport default useInput;\n","import React, { useState } from \"react\";\n\nconst useDropdown = (options, name, label, initialValue = \"\") => {\n  const [value, setValue] = useState(initialValue);\n  const id = label && label.replace(\" \", \"\").toLowerCase();\n  const Select = (\n    <div className='form-group'>\n      <label>{label}</label>\n      <select\n        id={id}\n        className='form-control'\n        name={name}\n        value={value}\n        onChange={e => {\n          setValue(e.target.value);\n        }}\n      >\n        <option>None</option>\n        {options.map(({ name, value }) => {\n          return (\n            <option value={value} key={value}>\n              {name}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n  return [Select, value, setValue];\n};\n\nexport default useDropdown;\n","import React, { useState, useEffect } from \"react\";\n\nconst useMultiSelect = (options, name, label, initialValue = []) => {\n  const [value, setValue] = useState(initialValue);\n  const id = label && label.replace(\" \", \"\").toLowerCase();\n  const MultiSelect = (\n    <div className='form-group'>\n      <label>Ice Cream Toppings</label>\n      <select\n        className='form-control'\n        multiple={true}\n        name='toppings'\n        value={value}\n        onChange={e => {\n          setValue(\n            [...e.target.options]\n              .filter(option => option.selected)\n              .map(option => option.value)\n          );\n        }}\n      >\n        {options.map(({ name, value }) => {\n          return (\n            <option value={value} key={value}>\n              {name}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n  return [MultiSelect, value, setValue];\n};\n\nexport default useMultiSelect;\n","import React, { useState } from \"react\";\n\nconst useRadioInput = (options, name, label, initialValue = \"\") => {\n  const [state, setState] = useState(initialValue);\n  const RadioInput = (\n    <div className='form-group'>\n      <label>{label}</label>\n      {options.map(option => {\n        return (\n          <div className='form-check' key={option}>\n            <input\n              className='form-check-input'\n              type='radio'\n              name={name}\n              value={option}\n              checked={state === option}\n              onChange={e => {\n                window.target = e.target;\n\n                setState(e.target.value);\n              }}\n            />\n            <label className='form-check-label'>{option}</label>\n          </div>\n        );\n      })}\n    </div>\n  );\n  return [RadioInput, state, setState];\n};\n\nexport default useRadioInput;\n","import React, { useState } from \"react\";\n\nconst useCheckbox = (name, label, initialValue = false) => {\n  const [value, setValue] = useState(initialValue);\n  const Checkbox = (\n    <div className='form-group'>\n      <div className='form-check'>\n        <input\n          className='form-check-input'\n          type='checkbox'\n          name={name}\n          onChange={e => {\n            console.log(e.target.checked);\n\n            setValue(e.target.checked);\n          }}\n        />\n        <label className='form-check-label'>{label}</label>\n      </div>\n    </div>\n  );\n  return [Checkbox, value, setValue];\n};\n\nexport default useCheckbox;\n","import React, { useState } from \"react\";\n\nconst useMultipleCheckbox = (options, name, label, initialValues = []) => {\n  const [values, setValues] = useState(initialValues);\n\n  const MultipleCheckbox = (\n    <div className='h5 bg-info text-white p-2'>\n      <div className='form-group'>\n        <label>{label}</label>\n        {options.map(option => {\n          return (\n            <div className='form-check' key={option}>\n              <input\n                className='form-check-input'\n                type='checkbox'\n                name={name}\n                value={option}\n                checked={values.includes(option)}\n                onChange={e => {\n                  if (e.target.checked) {\n                    setValues([...values, e.target.value]);\n                  } else {\n                    setValues(values.filter(value => value !== option));\n                  }\n                }}\n              />\n              <label className='form-check-label'>{option}</label>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n  return [MultipleCheckbox, values, setValues];\n};\n\nexport default useMultipleCheckbox;\n","import React, { useState } from \"react\";\n\nconst useTextarea = (name, label, initialValue = \"\") => {\n  const [value, setValue] = useState(\"\");\n  const Textarea = (\n    <div className='form-group'>\n      <label>{label}</label>\n      <textarea\n        className='form-control'\n        name={name}\n        value={value}\n        onChange={e => {\n          setValue(e.target.value);\n        }}\n      />\n    </div>\n  );\n  return [Textarea, value, setValue];\n};\nexport default useTextarea;\n","import React, { useState, useEffect } from \"react\";\nimport useInput from \"./useInput\";\nimport useDropdown from \"./useDropdown\";\nimport useMultiSelect from \"./useMultiSelect\";\nimport useRadioInput from \"./useRadioInput\";\nimport useCheckbox from \"./useCheckbox\";\nimport useMultipleCheckbox from \"./useMultipleCheckbox\";\nimport useTextarea from \"./useTextarea\";\n\nconst Editor = ({ submit }) => {\n  const flavorOptions = [\n    \"Chocolate\",\n    \"Double Chocolate\",\n    \"Triple Chocolate\",\n    \"Vanilla\"\n  ];\n  const toppingsOptions = [\n    \"Sprinkles\",\n    \"Fudge Sauce\",\n    \"Strawberries\",\n    \"Maple Syrup\"\n  ];\n\n  const [NameInput, name, setName] = useInput(\"name\");\n  const [FlavorSelect, flavor, setFlavor] = useDropdown(\n    flavorOptions.map(flavorOption => ({\n      name: flavorOption,\n      value: flavorOption\n    })),\n    \"flavor\",\n    \"Ice Cream Flavors\",\n    \"\"\n  );\n  const [ToppingMultiSelect, toppings, setToppings] = useMultiSelect(\n    toppingsOptions.map(toppingOption => ({\n      name: toppingOption,\n      value: toppingOption\n    })),\n    \"topping\",\n    \"Ice Cream Toppings\"\n  );\n\n  const [ToppingRadioInput, top, setTop] = useRadioInput(\n    toppingsOptions,\n    \"top\",\n    \"Select One Of the toppings\"\n  );\n  const [TwoScoopCheckbox, twoScoop, setTwoScoop] = useCheckbox(\n    \"twoScoops\",\n    \"Two Scoops\"\n  );\n\n  const [\n    ToppingMultipleCheckbox,\n    toppingMultiple,\n    setToppingMultiple\n  ] = useMultipleCheckbox(\n    toppingsOptions,\n    \"top\",\n    \"Select Multiple Of the toppings\"\n  );\n\n  const [OrderTextArea, order, setOrder] = useTextarea(\n    \"order\",\n    \"Order Description\"\n  );\n  useEffect(() => {\n    submit({ name, flavor, toppings, top, twoScoop, toppingMultiple, order });\n    // setting select on dependencies causes multiple rerender?\n    // but why?\n  }, [name, flavor, toppings, top, twoScoop, toppingMultiple, order]);\n\n  return (\n    <div className='h5 big-info text-dark p-2'>\n      {NameInput}\n      {FlavorSelect}\n      {ToppingMultiSelect}\n\n      <div className='h2'>Radio Input</div>\n\n      {ToppingRadioInput}\n\n      <div className='h2'>Toggle Checkbox</div>\n      {TwoScoopCheckbox}\n\n      <div className='h2'>Multi Checkbox</div>\n      {ToppingMultipleCheckbox}\n      {OrderTextArea}\n    </div>\n  );\n};\n\nexport default Editor;\n","import React, { useState } from \"react\";\n\nconst Display = ({ data }) => {\n  const formatValue = data =>\n    Array.isArray(data) ? data.join(\", \") : data.toString();\n  let keys = Object.keys(data);\n  return keys.length === 0 ? (\n    <div className='h5 bg-secondary p-2 text-white'>No Data</div>\n  ) : (\n    <div className='container-fluid bg-secondary p-2'>\n      {keys.map(key => {\n        return (\n          <div key={key} className='row h5 text-white'>\n            <div className='col'>{key}: </div>\n            <div className='col'>{formatValue(data[key])}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Display;\n","import React, { useState } from \"react\";\nimport Editor from \"./Editor\";\nimport Display from \"./Display\";\nfunction App() {\n  const [formData, setFormData] = useState({});\n  const submitData = newData => {\n    setFormData(newData);\n  };\n  return (\n    <div classname='container-fluid'>\n      <div className='row p-2'>\n        <div className='col-6'>\n          <Editor submit={submitData} />\n        </div>\n        <div className='col-6'>\n          {\" \"}\n          <Display data={formData} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}